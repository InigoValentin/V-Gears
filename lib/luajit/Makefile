# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.30

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Produce verbose output by default.
VERBOSE = 1

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/ivalentin/Workspace/Software/V-Gears/lib/luajit

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/ivalentin/Workspace/Software/V-Gears/lib/luajit

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target package
package: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Run CPack packaging tool..."
	/usr/bin/cpack --config ./CPackConfig.cmake
.PHONY : package

# Special rule for the target package
package/fast: package
.PHONY : package/fast

# Special rule for the target package_source
package_source:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Run CPack packaging tool for source..."
	/usr/bin/cpack --config ./CPackSourceConfig.cmake /home/ivalentin/Workspace/Software/V-Gears/lib/luajit/CPackSourceConfig.cmake
.PHONY : package_source

# Special rule for the target package_source
package_source/fast: package_source
.PHONY : package_source/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Running CMake cache editor..."
	/usr/bin/ccmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start /home/ivalentin/Workspace/Software/V-Gears/lib/luajit/CMakeFiles /home/ivalentin/Workspace/Software/V-Gears/lib/luajit//CMakeFiles/progress.marks
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/ivalentin/Workspace/Software/V-Gears/lib/luajit/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named minilua

# Build rule for target.
minilua: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 minilua
.PHONY : minilua

# fast build rule for target.
minilua/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minilua.dir/build.make CMakeFiles/minilua.dir/build
.PHONY : minilua/fast

#=============================================================================
# Target rules for targets named buildvm

# Build rule for target.
buildvm: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 buildvm
.PHONY : buildvm

# fast build rule for target.
buildvm/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/buildvm.dir/build.make CMakeFiles/buildvm.dir/build
.PHONY : buildvm/fast

#=============================================================================
# Target rules for targets named liblua

# Build rule for target.
liblua: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 liblua
.PHONY : liblua

# fast build rule for target.
liblua/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/build
.PHONY : liblua/fast

#=============================================================================
# Target rules for targets named luajit

# Build rule for target.
luajit: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 luajit
.PHONY : luajit

# fast build rule for target.
luajit/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/luajit.dir/build.make CMakeFiles/luajit.dir/build
.PHONY : luajit/fast

lj_vm.o: lj_vm.s.o
.PHONY : lj_vm.o

# target to build an object file
lj_vm.s.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/lj_vm.s.o
.PHONY : lj_vm.s.o

src/host/buildvm.o: src/host/buildvm.c.o
.PHONY : src/host/buildvm.o

# target to build an object file
src/host/buildvm.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/buildvm.dir/build.make CMakeFiles/buildvm.dir/src/host/buildvm.c.o
.PHONY : src/host/buildvm.c.o

src/host/buildvm.i: src/host/buildvm.c.i
.PHONY : src/host/buildvm.i

# target to preprocess a source file
src/host/buildvm.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/buildvm.dir/build.make CMakeFiles/buildvm.dir/src/host/buildvm.c.i
.PHONY : src/host/buildvm.c.i

src/host/buildvm.s: src/host/buildvm.c.s
.PHONY : src/host/buildvm.s

# target to generate assembly for a file
src/host/buildvm.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/buildvm.dir/build.make CMakeFiles/buildvm.dir/src/host/buildvm.c.s
.PHONY : src/host/buildvm.c.s

src/host/buildvm_asm.o: src/host/buildvm_asm.c.o
.PHONY : src/host/buildvm_asm.o

# target to build an object file
src/host/buildvm_asm.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/buildvm.dir/build.make CMakeFiles/buildvm.dir/src/host/buildvm_asm.c.o
.PHONY : src/host/buildvm_asm.c.o

src/host/buildvm_asm.i: src/host/buildvm_asm.c.i
.PHONY : src/host/buildvm_asm.i

# target to preprocess a source file
src/host/buildvm_asm.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/buildvm.dir/build.make CMakeFiles/buildvm.dir/src/host/buildvm_asm.c.i
.PHONY : src/host/buildvm_asm.c.i

src/host/buildvm_asm.s: src/host/buildvm_asm.c.s
.PHONY : src/host/buildvm_asm.s

# target to generate assembly for a file
src/host/buildvm_asm.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/buildvm.dir/build.make CMakeFiles/buildvm.dir/src/host/buildvm_asm.c.s
.PHONY : src/host/buildvm_asm.c.s

src/host/buildvm_fold.o: src/host/buildvm_fold.c.o
.PHONY : src/host/buildvm_fold.o

# target to build an object file
src/host/buildvm_fold.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/buildvm.dir/build.make CMakeFiles/buildvm.dir/src/host/buildvm_fold.c.o
.PHONY : src/host/buildvm_fold.c.o

src/host/buildvm_fold.i: src/host/buildvm_fold.c.i
.PHONY : src/host/buildvm_fold.i

# target to preprocess a source file
src/host/buildvm_fold.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/buildvm.dir/build.make CMakeFiles/buildvm.dir/src/host/buildvm_fold.c.i
.PHONY : src/host/buildvm_fold.c.i

src/host/buildvm_fold.s: src/host/buildvm_fold.c.s
.PHONY : src/host/buildvm_fold.s

# target to generate assembly for a file
src/host/buildvm_fold.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/buildvm.dir/build.make CMakeFiles/buildvm.dir/src/host/buildvm_fold.c.s
.PHONY : src/host/buildvm_fold.c.s

src/host/buildvm_lib.o: src/host/buildvm_lib.c.o
.PHONY : src/host/buildvm_lib.o

# target to build an object file
src/host/buildvm_lib.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/buildvm.dir/build.make CMakeFiles/buildvm.dir/src/host/buildvm_lib.c.o
.PHONY : src/host/buildvm_lib.c.o

src/host/buildvm_lib.i: src/host/buildvm_lib.c.i
.PHONY : src/host/buildvm_lib.i

# target to preprocess a source file
src/host/buildvm_lib.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/buildvm.dir/build.make CMakeFiles/buildvm.dir/src/host/buildvm_lib.c.i
.PHONY : src/host/buildvm_lib.c.i

src/host/buildvm_lib.s: src/host/buildvm_lib.c.s
.PHONY : src/host/buildvm_lib.s

# target to generate assembly for a file
src/host/buildvm_lib.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/buildvm.dir/build.make CMakeFiles/buildvm.dir/src/host/buildvm_lib.c.s
.PHONY : src/host/buildvm_lib.c.s

src/host/buildvm_peobj.o: src/host/buildvm_peobj.c.o
.PHONY : src/host/buildvm_peobj.o

# target to build an object file
src/host/buildvm_peobj.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/buildvm.dir/build.make CMakeFiles/buildvm.dir/src/host/buildvm_peobj.c.o
.PHONY : src/host/buildvm_peobj.c.o

src/host/buildvm_peobj.i: src/host/buildvm_peobj.c.i
.PHONY : src/host/buildvm_peobj.i

# target to preprocess a source file
src/host/buildvm_peobj.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/buildvm.dir/build.make CMakeFiles/buildvm.dir/src/host/buildvm_peobj.c.i
.PHONY : src/host/buildvm_peobj.c.i

src/host/buildvm_peobj.s: src/host/buildvm_peobj.c.s
.PHONY : src/host/buildvm_peobj.s

# target to generate assembly for a file
src/host/buildvm_peobj.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/buildvm.dir/build.make CMakeFiles/buildvm.dir/src/host/buildvm_peobj.c.s
.PHONY : src/host/buildvm_peobj.c.s

src/host/minilua.o: src/host/minilua.c.o
.PHONY : src/host/minilua.o

# target to build an object file
src/host/minilua.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minilua.dir/build.make CMakeFiles/minilua.dir/src/host/minilua.c.o
.PHONY : src/host/minilua.c.o

src/host/minilua.i: src/host/minilua.c.i
.PHONY : src/host/minilua.i

# target to preprocess a source file
src/host/minilua.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minilua.dir/build.make CMakeFiles/minilua.dir/src/host/minilua.c.i
.PHONY : src/host/minilua.c.i

src/host/minilua.s: src/host/minilua.c.s
.PHONY : src/host/minilua.s

# target to generate assembly for a file
src/host/minilua.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/minilua.dir/build.make CMakeFiles/minilua.dir/src/host/minilua.c.s
.PHONY : src/host/minilua.c.s

src/lib_aux.o: src/lib_aux.c.o
.PHONY : src/lib_aux.o

# target to build an object file
src/lib_aux.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_aux.c.o
.PHONY : src/lib_aux.c.o

src/lib_aux.i: src/lib_aux.c.i
.PHONY : src/lib_aux.i

# target to preprocess a source file
src/lib_aux.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_aux.c.i
.PHONY : src/lib_aux.c.i

src/lib_aux.s: src/lib_aux.c.s
.PHONY : src/lib_aux.s

# target to generate assembly for a file
src/lib_aux.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_aux.c.s
.PHONY : src/lib_aux.c.s

src/lib_base.o: src/lib_base.c.o
.PHONY : src/lib_base.o

# target to build an object file
src/lib_base.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_base.c.o
.PHONY : src/lib_base.c.o

src/lib_base.i: src/lib_base.c.i
.PHONY : src/lib_base.i

# target to preprocess a source file
src/lib_base.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_base.c.i
.PHONY : src/lib_base.c.i

src/lib_base.s: src/lib_base.c.s
.PHONY : src/lib_base.s

# target to generate assembly for a file
src/lib_base.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_base.c.s
.PHONY : src/lib_base.c.s

src/lib_bit.o: src/lib_bit.c.o
.PHONY : src/lib_bit.o

# target to build an object file
src/lib_bit.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_bit.c.o
.PHONY : src/lib_bit.c.o

src/lib_bit.i: src/lib_bit.c.i
.PHONY : src/lib_bit.i

# target to preprocess a source file
src/lib_bit.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_bit.c.i
.PHONY : src/lib_bit.c.i

src/lib_bit.s: src/lib_bit.c.s
.PHONY : src/lib_bit.s

# target to generate assembly for a file
src/lib_bit.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_bit.c.s
.PHONY : src/lib_bit.c.s

src/lib_debug.o: src/lib_debug.c.o
.PHONY : src/lib_debug.o

# target to build an object file
src/lib_debug.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_debug.c.o
.PHONY : src/lib_debug.c.o

src/lib_debug.i: src/lib_debug.c.i
.PHONY : src/lib_debug.i

# target to preprocess a source file
src/lib_debug.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_debug.c.i
.PHONY : src/lib_debug.c.i

src/lib_debug.s: src/lib_debug.c.s
.PHONY : src/lib_debug.s

# target to generate assembly for a file
src/lib_debug.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_debug.c.s
.PHONY : src/lib_debug.c.s

src/lib_ffi.o: src/lib_ffi.c.o
.PHONY : src/lib_ffi.o

# target to build an object file
src/lib_ffi.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_ffi.c.o
.PHONY : src/lib_ffi.c.o

src/lib_ffi.i: src/lib_ffi.c.i
.PHONY : src/lib_ffi.i

# target to preprocess a source file
src/lib_ffi.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_ffi.c.i
.PHONY : src/lib_ffi.c.i

src/lib_ffi.s: src/lib_ffi.c.s
.PHONY : src/lib_ffi.s

# target to generate assembly for a file
src/lib_ffi.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_ffi.c.s
.PHONY : src/lib_ffi.c.s

src/lib_init.o: src/lib_init.c.o
.PHONY : src/lib_init.o

# target to build an object file
src/lib_init.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_init.c.o
.PHONY : src/lib_init.c.o

src/lib_init.i: src/lib_init.c.i
.PHONY : src/lib_init.i

# target to preprocess a source file
src/lib_init.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_init.c.i
.PHONY : src/lib_init.c.i

src/lib_init.s: src/lib_init.c.s
.PHONY : src/lib_init.s

# target to generate assembly for a file
src/lib_init.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_init.c.s
.PHONY : src/lib_init.c.s

src/lib_io.o: src/lib_io.c.o
.PHONY : src/lib_io.o

# target to build an object file
src/lib_io.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_io.c.o
.PHONY : src/lib_io.c.o

src/lib_io.i: src/lib_io.c.i
.PHONY : src/lib_io.i

# target to preprocess a source file
src/lib_io.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_io.c.i
.PHONY : src/lib_io.c.i

src/lib_io.s: src/lib_io.c.s
.PHONY : src/lib_io.s

# target to generate assembly for a file
src/lib_io.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_io.c.s
.PHONY : src/lib_io.c.s

src/lib_jit.o: src/lib_jit.c.o
.PHONY : src/lib_jit.o

# target to build an object file
src/lib_jit.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_jit.c.o
.PHONY : src/lib_jit.c.o

src/lib_jit.i: src/lib_jit.c.i
.PHONY : src/lib_jit.i

# target to preprocess a source file
src/lib_jit.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_jit.c.i
.PHONY : src/lib_jit.c.i

src/lib_jit.s: src/lib_jit.c.s
.PHONY : src/lib_jit.s

# target to generate assembly for a file
src/lib_jit.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_jit.c.s
.PHONY : src/lib_jit.c.s

src/lib_math.o: src/lib_math.c.o
.PHONY : src/lib_math.o

# target to build an object file
src/lib_math.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_math.c.o
.PHONY : src/lib_math.c.o

src/lib_math.i: src/lib_math.c.i
.PHONY : src/lib_math.i

# target to preprocess a source file
src/lib_math.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_math.c.i
.PHONY : src/lib_math.c.i

src/lib_math.s: src/lib_math.c.s
.PHONY : src/lib_math.s

# target to generate assembly for a file
src/lib_math.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_math.c.s
.PHONY : src/lib_math.c.s

src/lib_os.o: src/lib_os.c.o
.PHONY : src/lib_os.o

# target to build an object file
src/lib_os.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_os.c.o
.PHONY : src/lib_os.c.o

src/lib_os.i: src/lib_os.c.i
.PHONY : src/lib_os.i

# target to preprocess a source file
src/lib_os.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_os.c.i
.PHONY : src/lib_os.c.i

src/lib_os.s: src/lib_os.c.s
.PHONY : src/lib_os.s

# target to generate assembly for a file
src/lib_os.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_os.c.s
.PHONY : src/lib_os.c.s

src/lib_package_rel.o: src/lib_package_rel.c.o
.PHONY : src/lib_package_rel.o

# target to build an object file
src/lib_package_rel.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_package_rel.c.o
.PHONY : src/lib_package_rel.c.o

src/lib_package_rel.i: src/lib_package_rel.c.i
.PHONY : src/lib_package_rel.i

# target to preprocess a source file
src/lib_package_rel.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_package_rel.c.i
.PHONY : src/lib_package_rel.c.i

src/lib_package_rel.s: src/lib_package_rel.c.s
.PHONY : src/lib_package_rel.s

# target to generate assembly for a file
src/lib_package_rel.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_package_rel.c.s
.PHONY : src/lib_package_rel.c.s

src/lib_string.o: src/lib_string.c.o
.PHONY : src/lib_string.o

# target to build an object file
src/lib_string.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_string.c.o
.PHONY : src/lib_string.c.o

src/lib_string.i: src/lib_string.c.i
.PHONY : src/lib_string.i

# target to preprocess a source file
src/lib_string.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_string.c.i
.PHONY : src/lib_string.c.i

src/lib_string.s: src/lib_string.c.s
.PHONY : src/lib_string.s

# target to generate assembly for a file
src/lib_string.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_string.c.s
.PHONY : src/lib_string.c.s

src/lib_table.o: src/lib_table.c.o
.PHONY : src/lib_table.o

# target to build an object file
src/lib_table.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_table.c.o
.PHONY : src/lib_table.c.o

src/lib_table.i: src/lib_table.c.i
.PHONY : src/lib_table.i

# target to preprocess a source file
src/lib_table.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_table.c.i
.PHONY : src/lib_table.c.i

src/lib_table.s: src/lib_table.c.s
.PHONY : src/lib_table.s

# target to generate assembly for a file
src/lib_table.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lib_table.c.s
.PHONY : src/lib_table.c.s

src/lj_alloc.o: src/lj_alloc.c.o
.PHONY : src/lj_alloc.o

# target to build an object file
src/lj_alloc.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_alloc.c.o
.PHONY : src/lj_alloc.c.o

src/lj_alloc.i: src/lj_alloc.c.i
.PHONY : src/lj_alloc.i

# target to preprocess a source file
src/lj_alloc.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_alloc.c.i
.PHONY : src/lj_alloc.c.i

src/lj_alloc.s: src/lj_alloc.c.s
.PHONY : src/lj_alloc.s

# target to generate assembly for a file
src/lj_alloc.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_alloc.c.s
.PHONY : src/lj_alloc.c.s

src/lj_api.o: src/lj_api.c.o
.PHONY : src/lj_api.o

# target to build an object file
src/lj_api.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_api.c.o
.PHONY : src/lj_api.c.o

src/lj_api.i: src/lj_api.c.i
.PHONY : src/lj_api.i

# target to preprocess a source file
src/lj_api.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_api.c.i
.PHONY : src/lj_api.c.i

src/lj_api.s: src/lj_api.c.s
.PHONY : src/lj_api.s

# target to generate assembly for a file
src/lj_api.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_api.c.s
.PHONY : src/lj_api.c.s

src/lj_asm.o: src/lj_asm.c.o
.PHONY : src/lj_asm.o

# target to build an object file
src/lj_asm.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_asm.c.o
.PHONY : src/lj_asm.c.o

src/lj_asm.i: src/lj_asm.c.i
.PHONY : src/lj_asm.i

# target to preprocess a source file
src/lj_asm.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_asm.c.i
.PHONY : src/lj_asm.c.i

src/lj_asm.s: src/lj_asm.c.s
.PHONY : src/lj_asm.s

# target to generate assembly for a file
src/lj_asm.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_asm.c.s
.PHONY : src/lj_asm.c.s

src/lj_bc.o: src/lj_bc.c.o
.PHONY : src/lj_bc.o

# target to build an object file
src/lj_bc.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_bc.c.o
.PHONY : src/lj_bc.c.o

src/lj_bc.i: src/lj_bc.c.i
.PHONY : src/lj_bc.i

# target to preprocess a source file
src/lj_bc.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_bc.c.i
.PHONY : src/lj_bc.c.i

src/lj_bc.s: src/lj_bc.c.s
.PHONY : src/lj_bc.s

# target to generate assembly for a file
src/lj_bc.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_bc.c.s
.PHONY : src/lj_bc.c.s

src/lj_bcread.o: src/lj_bcread.c.o
.PHONY : src/lj_bcread.o

# target to build an object file
src/lj_bcread.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_bcread.c.o
.PHONY : src/lj_bcread.c.o

src/lj_bcread.i: src/lj_bcread.c.i
.PHONY : src/lj_bcread.i

# target to preprocess a source file
src/lj_bcread.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_bcread.c.i
.PHONY : src/lj_bcread.c.i

src/lj_bcread.s: src/lj_bcread.c.s
.PHONY : src/lj_bcread.s

# target to generate assembly for a file
src/lj_bcread.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_bcread.c.s
.PHONY : src/lj_bcread.c.s

src/lj_bcwrite.o: src/lj_bcwrite.c.o
.PHONY : src/lj_bcwrite.o

# target to build an object file
src/lj_bcwrite.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_bcwrite.c.o
.PHONY : src/lj_bcwrite.c.o

src/lj_bcwrite.i: src/lj_bcwrite.c.i
.PHONY : src/lj_bcwrite.i

# target to preprocess a source file
src/lj_bcwrite.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_bcwrite.c.i
.PHONY : src/lj_bcwrite.c.i

src/lj_bcwrite.s: src/lj_bcwrite.c.s
.PHONY : src/lj_bcwrite.s

# target to generate assembly for a file
src/lj_bcwrite.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_bcwrite.c.s
.PHONY : src/lj_bcwrite.c.s

src/lj_carith.o: src/lj_carith.c.o
.PHONY : src/lj_carith.o

# target to build an object file
src/lj_carith.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_carith.c.o
.PHONY : src/lj_carith.c.o

src/lj_carith.i: src/lj_carith.c.i
.PHONY : src/lj_carith.i

# target to preprocess a source file
src/lj_carith.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_carith.c.i
.PHONY : src/lj_carith.c.i

src/lj_carith.s: src/lj_carith.c.s
.PHONY : src/lj_carith.s

# target to generate assembly for a file
src/lj_carith.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_carith.c.s
.PHONY : src/lj_carith.c.s

src/lj_ccall.o: src/lj_ccall.c.o
.PHONY : src/lj_ccall.o

# target to build an object file
src/lj_ccall.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_ccall.c.o
.PHONY : src/lj_ccall.c.o

src/lj_ccall.i: src/lj_ccall.c.i
.PHONY : src/lj_ccall.i

# target to preprocess a source file
src/lj_ccall.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_ccall.c.i
.PHONY : src/lj_ccall.c.i

src/lj_ccall.s: src/lj_ccall.c.s
.PHONY : src/lj_ccall.s

# target to generate assembly for a file
src/lj_ccall.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_ccall.c.s
.PHONY : src/lj_ccall.c.s

src/lj_ccallback.o: src/lj_ccallback.c.o
.PHONY : src/lj_ccallback.o

# target to build an object file
src/lj_ccallback.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_ccallback.c.o
.PHONY : src/lj_ccallback.c.o

src/lj_ccallback.i: src/lj_ccallback.c.i
.PHONY : src/lj_ccallback.i

# target to preprocess a source file
src/lj_ccallback.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_ccallback.c.i
.PHONY : src/lj_ccallback.c.i

src/lj_ccallback.s: src/lj_ccallback.c.s
.PHONY : src/lj_ccallback.s

# target to generate assembly for a file
src/lj_ccallback.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_ccallback.c.s
.PHONY : src/lj_ccallback.c.s

src/lj_cconv.o: src/lj_cconv.c.o
.PHONY : src/lj_cconv.o

# target to build an object file
src/lj_cconv.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_cconv.c.o
.PHONY : src/lj_cconv.c.o

src/lj_cconv.i: src/lj_cconv.c.i
.PHONY : src/lj_cconv.i

# target to preprocess a source file
src/lj_cconv.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_cconv.c.i
.PHONY : src/lj_cconv.c.i

src/lj_cconv.s: src/lj_cconv.c.s
.PHONY : src/lj_cconv.s

# target to generate assembly for a file
src/lj_cconv.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_cconv.c.s
.PHONY : src/lj_cconv.c.s

src/lj_cdata.o: src/lj_cdata.c.o
.PHONY : src/lj_cdata.o

# target to build an object file
src/lj_cdata.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_cdata.c.o
.PHONY : src/lj_cdata.c.o

src/lj_cdata.i: src/lj_cdata.c.i
.PHONY : src/lj_cdata.i

# target to preprocess a source file
src/lj_cdata.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_cdata.c.i
.PHONY : src/lj_cdata.c.i

src/lj_cdata.s: src/lj_cdata.c.s
.PHONY : src/lj_cdata.s

# target to generate assembly for a file
src/lj_cdata.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_cdata.c.s
.PHONY : src/lj_cdata.c.s

src/lj_char.o: src/lj_char.c.o
.PHONY : src/lj_char.o

# target to build an object file
src/lj_char.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_char.c.o
.PHONY : src/lj_char.c.o

src/lj_char.i: src/lj_char.c.i
.PHONY : src/lj_char.i

# target to preprocess a source file
src/lj_char.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_char.c.i
.PHONY : src/lj_char.c.i

src/lj_char.s: src/lj_char.c.s
.PHONY : src/lj_char.s

# target to generate assembly for a file
src/lj_char.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_char.c.s
.PHONY : src/lj_char.c.s

src/lj_clib.o: src/lj_clib.c.o
.PHONY : src/lj_clib.o

# target to build an object file
src/lj_clib.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_clib.c.o
.PHONY : src/lj_clib.c.o

src/lj_clib.i: src/lj_clib.c.i
.PHONY : src/lj_clib.i

# target to preprocess a source file
src/lj_clib.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_clib.c.i
.PHONY : src/lj_clib.c.i

src/lj_clib.s: src/lj_clib.c.s
.PHONY : src/lj_clib.s

# target to generate assembly for a file
src/lj_clib.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_clib.c.s
.PHONY : src/lj_clib.c.s

src/lj_cparse.o: src/lj_cparse.c.o
.PHONY : src/lj_cparse.o

# target to build an object file
src/lj_cparse.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_cparse.c.o
.PHONY : src/lj_cparse.c.o

src/lj_cparse.i: src/lj_cparse.c.i
.PHONY : src/lj_cparse.i

# target to preprocess a source file
src/lj_cparse.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_cparse.c.i
.PHONY : src/lj_cparse.c.i

src/lj_cparse.s: src/lj_cparse.c.s
.PHONY : src/lj_cparse.s

# target to generate assembly for a file
src/lj_cparse.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_cparse.c.s
.PHONY : src/lj_cparse.c.s

src/lj_crecord.o: src/lj_crecord.c.o
.PHONY : src/lj_crecord.o

# target to build an object file
src/lj_crecord.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_crecord.c.o
.PHONY : src/lj_crecord.c.o

src/lj_crecord.i: src/lj_crecord.c.i
.PHONY : src/lj_crecord.i

# target to preprocess a source file
src/lj_crecord.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_crecord.c.i
.PHONY : src/lj_crecord.c.i

src/lj_crecord.s: src/lj_crecord.c.s
.PHONY : src/lj_crecord.s

# target to generate assembly for a file
src/lj_crecord.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_crecord.c.s
.PHONY : src/lj_crecord.c.s

src/lj_ctype.o: src/lj_ctype.c.o
.PHONY : src/lj_ctype.o

# target to build an object file
src/lj_ctype.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_ctype.c.o
.PHONY : src/lj_ctype.c.o

src/lj_ctype.i: src/lj_ctype.c.i
.PHONY : src/lj_ctype.i

# target to preprocess a source file
src/lj_ctype.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_ctype.c.i
.PHONY : src/lj_ctype.c.i

src/lj_ctype.s: src/lj_ctype.c.s
.PHONY : src/lj_ctype.s

# target to generate assembly for a file
src/lj_ctype.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_ctype.c.s
.PHONY : src/lj_ctype.c.s

src/lj_debug.o: src/lj_debug.c.o
.PHONY : src/lj_debug.o

# target to build an object file
src/lj_debug.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_debug.c.o
.PHONY : src/lj_debug.c.o

src/lj_debug.i: src/lj_debug.c.i
.PHONY : src/lj_debug.i

# target to preprocess a source file
src/lj_debug.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_debug.c.i
.PHONY : src/lj_debug.c.i

src/lj_debug.s: src/lj_debug.c.s
.PHONY : src/lj_debug.s

# target to generate assembly for a file
src/lj_debug.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_debug.c.s
.PHONY : src/lj_debug.c.s

src/lj_dispatch.o: src/lj_dispatch.c.o
.PHONY : src/lj_dispatch.o

# target to build an object file
src/lj_dispatch.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_dispatch.c.o
.PHONY : src/lj_dispatch.c.o

src/lj_dispatch.i: src/lj_dispatch.c.i
.PHONY : src/lj_dispatch.i

# target to preprocess a source file
src/lj_dispatch.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_dispatch.c.i
.PHONY : src/lj_dispatch.c.i

src/lj_dispatch.s: src/lj_dispatch.c.s
.PHONY : src/lj_dispatch.s

# target to generate assembly for a file
src/lj_dispatch.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_dispatch.c.s
.PHONY : src/lj_dispatch.c.s

src/lj_err.o: src/lj_err.c.o
.PHONY : src/lj_err.o

# target to build an object file
src/lj_err.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_err.c.o
.PHONY : src/lj_err.c.o

src/lj_err.i: src/lj_err.c.i
.PHONY : src/lj_err.i

# target to preprocess a source file
src/lj_err.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_err.c.i
.PHONY : src/lj_err.c.i

src/lj_err.s: src/lj_err.c.s
.PHONY : src/lj_err.s

# target to generate assembly for a file
src/lj_err.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_err.c.s
.PHONY : src/lj_err.c.s

src/lj_ffrecord.o: src/lj_ffrecord.c.o
.PHONY : src/lj_ffrecord.o

# target to build an object file
src/lj_ffrecord.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_ffrecord.c.o
.PHONY : src/lj_ffrecord.c.o

src/lj_ffrecord.i: src/lj_ffrecord.c.i
.PHONY : src/lj_ffrecord.i

# target to preprocess a source file
src/lj_ffrecord.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_ffrecord.c.i
.PHONY : src/lj_ffrecord.c.i

src/lj_ffrecord.s: src/lj_ffrecord.c.s
.PHONY : src/lj_ffrecord.s

# target to generate assembly for a file
src/lj_ffrecord.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_ffrecord.c.s
.PHONY : src/lj_ffrecord.c.s

src/lj_func.o: src/lj_func.c.o
.PHONY : src/lj_func.o

# target to build an object file
src/lj_func.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_func.c.o
.PHONY : src/lj_func.c.o

src/lj_func.i: src/lj_func.c.i
.PHONY : src/lj_func.i

# target to preprocess a source file
src/lj_func.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_func.c.i
.PHONY : src/lj_func.c.i

src/lj_func.s: src/lj_func.c.s
.PHONY : src/lj_func.s

# target to generate assembly for a file
src/lj_func.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_func.c.s
.PHONY : src/lj_func.c.s

src/lj_gc.o: src/lj_gc.c.o
.PHONY : src/lj_gc.o

# target to build an object file
src/lj_gc.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_gc.c.o
.PHONY : src/lj_gc.c.o

src/lj_gc.i: src/lj_gc.c.i
.PHONY : src/lj_gc.i

# target to preprocess a source file
src/lj_gc.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_gc.c.i
.PHONY : src/lj_gc.c.i

src/lj_gc.s: src/lj_gc.c.s
.PHONY : src/lj_gc.s

# target to generate assembly for a file
src/lj_gc.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_gc.c.s
.PHONY : src/lj_gc.c.s

src/lj_gdbjit.o: src/lj_gdbjit.c.o
.PHONY : src/lj_gdbjit.o

# target to build an object file
src/lj_gdbjit.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_gdbjit.c.o
.PHONY : src/lj_gdbjit.c.o

src/lj_gdbjit.i: src/lj_gdbjit.c.i
.PHONY : src/lj_gdbjit.i

# target to preprocess a source file
src/lj_gdbjit.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_gdbjit.c.i
.PHONY : src/lj_gdbjit.c.i

src/lj_gdbjit.s: src/lj_gdbjit.c.s
.PHONY : src/lj_gdbjit.s

# target to generate assembly for a file
src/lj_gdbjit.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_gdbjit.c.s
.PHONY : src/lj_gdbjit.c.s

src/lj_ir.o: src/lj_ir.c.o
.PHONY : src/lj_ir.o

# target to build an object file
src/lj_ir.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_ir.c.o
.PHONY : src/lj_ir.c.o

src/lj_ir.i: src/lj_ir.c.i
.PHONY : src/lj_ir.i

# target to preprocess a source file
src/lj_ir.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_ir.c.i
.PHONY : src/lj_ir.c.i

src/lj_ir.s: src/lj_ir.c.s
.PHONY : src/lj_ir.s

# target to generate assembly for a file
src/lj_ir.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_ir.c.s
.PHONY : src/lj_ir.c.s

src/lj_lex.o: src/lj_lex.c.o
.PHONY : src/lj_lex.o

# target to build an object file
src/lj_lex.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_lex.c.o
.PHONY : src/lj_lex.c.o

src/lj_lex.i: src/lj_lex.c.i
.PHONY : src/lj_lex.i

# target to preprocess a source file
src/lj_lex.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_lex.c.i
.PHONY : src/lj_lex.c.i

src/lj_lex.s: src/lj_lex.c.s
.PHONY : src/lj_lex.s

# target to generate assembly for a file
src/lj_lex.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_lex.c.s
.PHONY : src/lj_lex.c.s

src/lj_lib.o: src/lj_lib.c.o
.PHONY : src/lj_lib.o

# target to build an object file
src/lj_lib.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_lib.c.o
.PHONY : src/lj_lib.c.o

src/lj_lib.i: src/lj_lib.c.i
.PHONY : src/lj_lib.i

# target to preprocess a source file
src/lj_lib.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_lib.c.i
.PHONY : src/lj_lib.c.i

src/lj_lib.s: src/lj_lib.c.s
.PHONY : src/lj_lib.s

# target to generate assembly for a file
src/lj_lib.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_lib.c.s
.PHONY : src/lj_lib.c.s

src/lj_load.o: src/lj_load.c.o
.PHONY : src/lj_load.o

# target to build an object file
src/lj_load.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_load.c.o
.PHONY : src/lj_load.c.o

src/lj_load.i: src/lj_load.c.i
.PHONY : src/lj_load.i

# target to preprocess a source file
src/lj_load.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_load.c.i
.PHONY : src/lj_load.c.i

src/lj_load.s: src/lj_load.c.s
.PHONY : src/lj_load.s

# target to generate assembly for a file
src/lj_load.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_load.c.s
.PHONY : src/lj_load.c.s

src/lj_mcode.o: src/lj_mcode.c.o
.PHONY : src/lj_mcode.o

# target to build an object file
src/lj_mcode.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_mcode.c.o
.PHONY : src/lj_mcode.c.o

src/lj_mcode.i: src/lj_mcode.c.i
.PHONY : src/lj_mcode.i

# target to preprocess a source file
src/lj_mcode.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_mcode.c.i
.PHONY : src/lj_mcode.c.i

src/lj_mcode.s: src/lj_mcode.c.s
.PHONY : src/lj_mcode.s

# target to generate assembly for a file
src/lj_mcode.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_mcode.c.s
.PHONY : src/lj_mcode.c.s

src/lj_meta.o: src/lj_meta.c.o
.PHONY : src/lj_meta.o

# target to build an object file
src/lj_meta.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_meta.c.o
.PHONY : src/lj_meta.c.o

src/lj_meta.i: src/lj_meta.c.i
.PHONY : src/lj_meta.i

# target to preprocess a source file
src/lj_meta.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_meta.c.i
.PHONY : src/lj_meta.c.i

src/lj_meta.s: src/lj_meta.c.s
.PHONY : src/lj_meta.s

# target to generate assembly for a file
src/lj_meta.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_meta.c.s
.PHONY : src/lj_meta.c.s

src/lj_obj.o: src/lj_obj.c.o
.PHONY : src/lj_obj.o

# target to build an object file
src/lj_obj.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_obj.c.o
.PHONY : src/lj_obj.c.o

src/lj_obj.i: src/lj_obj.c.i
.PHONY : src/lj_obj.i

# target to preprocess a source file
src/lj_obj.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_obj.c.i
.PHONY : src/lj_obj.c.i

src/lj_obj.s: src/lj_obj.c.s
.PHONY : src/lj_obj.s

# target to generate assembly for a file
src/lj_obj.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_obj.c.s
.PHONY : src/lj_obj.c.s

src/lj_opt_dce.o: src/lj_opt_dce.c.o
.PHONY : src/lj_opt_dce.o

# target to build an object file
src/lj_opt_dce.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_opt_dce.c.o
.PHONY : src/lj_opt_dce.c.o

src/lj_opt_dce.i: src/lj_opt_dce.c.i
.PHONY : src/lj_opt_dce.i

# target to preprocess a source file
src/lj_opt_dce.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_opt_dce.c.i
.PHONY : src/lj_opt_dce.c.i

src/lj_opt_dce.s: src/lj_opt_dce.c.s
.PHONY : src/lj_opt_dce.s

# target to generate assembly for a file
src/lj_opt_dce.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_opt_dce.c.s
.PHONY : src/lj_opt_dce.c.s

src/lj_opt_fold.o: src/lj_opt_fold.c.o
.PHONY : src/lj_opt_fold.o

# target to build an object file
src/lj_opt_fold.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_opt_fold.c.o
.PHONY : src/lj_opt_fold.c.o

src/lj_opt_fold.i: src/lj_opt_fold.c.i
.PHONY : src/lj_opt_fold.i

# target to preprocess a source file
src/lj_opt_fold.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_opt_fold.c.i
.PHONY : src/lj_opt_fold.c.i

src/lj_opt_fold.s: src/lj_opt_fold.c.s
.PHONY : src/lj_opt_fold.s

# target to generate assembly for a file
src/lj_opt_fold.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_opt_fold.c.s
.PHONY : src/lj_opt_fold.c.s

src/lj_opt_loop.o: src/lj_opt_loop.c.o
.PHONY : src/lj_opt_loop.o

# target to build an object file
src/lj_opt_loop.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_opt_loop.c.o
.PHONY : src/lj_opt_loop.c.o

src/lj_opt_loop.i: src/lj_opt_loop.c.i
.PHONY : src/lj_opt_loop.i

# target to preprocess a source file
src/lj_opt_loop.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_opt_loop.c.i
.PHONY : src/lj_opt_loop.c.i

src/lj_opt_loop.s: src/lj_opt_loop.c.s
.PHONY : src/lj_opt_loop.s

# target to generate assembly for a file
src/lj_opt_loop.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_opt_loop.c.s
.PHONY : src/lj_opt_loop.c.s

src/lj_opt_mem.o: src/lj_opt_mem.c.o
.PHONY : src/lj_opt_mem.o

# target to build an object file
src/lj_opt_mem.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_opt_mem.c.o
.PHONY : src/lj_opt_mem.c.o

src/lj_opt_mem.i: src/lj_opt_mem.c.i
.PHONY : src/lj_opt_mem.i

# target to preprocess a source file
src/lj_opt_mem.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_opt_mem.c.i
.PHONY : src/lj_opt_mem.c.i

src/lj_opt_mem.s: src/lj_opt_mem.c.s
.PHONY : src/lj_opt_mem.s

# target to generate assembly for a file
src/lj_opt_mem.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_opt_mem.c.s
.PHONY : src/lj_opt_mem.c.s

src/lj_opt_narrow.o: src/lj_opt_narrow.c.o
.PHONY : src/lj_opt_narrow.o

# target to build an object file
src/lj_opt_narrow.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_opt_narrow.c.o
.PHONY : src/lj_opt_narrow.c.o

src/lj_opt_narrow.i: src/lj_opt_narrow.c.i
.PHONY : src/lj_opt_narrow.i

# target to preprocess a source file
src/lj_opt_narrow.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_opt_narrow.c.i
.PHONY : src/lj_opt_narrow.c.i

src/lj_opt_narrow.s: src/lj_opt_narrow.c.s
.PHONY : src/lj_opt_narrow.s

# target to generate assembly for a file
src/lj_opt_narrow.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_opt_narrow.c.s
.PHONY : src/lj_opt_narrow.c.s

src/lj_opt_sink.o: src/lj_opt_sink.c.o
.PHONY : src/lj_opt_sink.o

# target to build an object file
src/lj_opt_sink.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_opt_sink.c.o
.PHONY : src/lj_opt_sink.c.o

src/lj_opt_sink.i: src/lj_opt_sink.c.i
.PHONY : src/lj_opt_sink.i

# target to preprocess a source file
src/lj_opt_sink.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_opt_sink.c.i
.PHONY : src/lj_opt_sink.c.i

src/lj_opt_sink.s: src/lj_opt_sink.c.s
.PHONY : src/lj_opt_sink.s

# target to generate assembly for a file
src/lj_opt_sink.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_opt_sink.c.s
.PHONY : src/lj_opt_sink.c.s

src/lj_opt_split.o: src/lj_opt_split.c.o
.PHONY : src/lj_opt_split.o

# target to build an object file
src/lj_opt_split.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_opt_split.c.o
.PHONY : src/lj_opt_split.c.o

src/lj_opt_split.i: src/lj_opt_split.c.i
.PHONY : src/lj_opt_split.i

# target to preprocess a source file
src/lj_opt_split.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_opt_split.c.i
.PHONY : src/lj_opt_split.c.i

src/lj_opt_split.s: src/lj_opt_split.c.s
.PHONY : src/lj_opt_split.s

# target to generate assembly for a file
src/lj_opt_split.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_opt_split.c.s
.PHONY : src/lj_opt_split.c.s

src/lj_parse.o: src/lj_parse.c.o
.PHONY : src/lj_parse.o

# target to build an object file
src/lj_parse.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_parse.c.o
.PHONY : src/lj_parse.c.o

src/lj_parse.i: src/lj_parse.c.i
.PHONY : src/lj_parse.i

# target to preprocess a source file
src/lj_parse.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_parse.c.i
.PHONY : src/lj_parse.c.i

src/lj_parse.s: src/lj_parse.c.s
.PHONY : src/lj_parse.s

# target to generate assembly for a file
src/lj_parse.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_parse.c.s
.PHONY : src/lj_parse.c.s

src/lj_record.o: src/lj_record.c.o
.PHONY : src/lj_record.o

# target to build an object file
src/lj_record.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_record.c.o
.PHONY : src/lj_record.c.o

src/lj_record.i: src/lj_record.c.i
.PHONY : src/lj_record.i

# target to preprocess a source file
src/lj_record.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_record.c.i
.PHONY : src/lj_record.c.i

src/lj_record.s: src/lj_record.c.s
.PHONY : src/lj_record.s

# target to generate assembly for a file
src/lj_record.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_record.c.s
.PHONY : src/lj_record.c.s

src/lj_snap.o: src/lj_snap.c.o
.PHONY : src/lj_snap.o

# target to build an object file
src/lj_snap.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_snap.c.o
.PHONY : src/lj_snap.c.o

src/lj_snap.i: src/lj_snap.c.i
.PHONY : src/lj_snap.i

# target to preprocess a source file
src/lj_snap.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_snap.c.i
.PHONY : src/lj_snap.c.i

src/lj_snap.s: src/lj_snap.c.s
.PHONY : src/lj_snap.s

# target to generate assembly for a file
src/lj_snap.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_snap.c.s
.PHONY : src/lj_snap.c.s

src/lj_state.o: src/lj_state.c.o
.PHONY : src/lj_state.o

# target to build an object file
src/lj_state.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_state.c.o
.PHONY : src/lj_state.c.o

src/lj_state.i: src/lj_state.c.i
.PHONY : src/lj_state.i

# target to preprocess a source file
src/lj_state.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_state.c.i
.PHONY : src/lj_state.c.i

src/lj_state.s: src/lj_state.c.s
.PHONY : src/lj_state.s

# target to generate assembly for a file
src/lj_state.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_state.c.s
.PHONY : src/lj_state.c.s

src/lj_str.o: src/lj_str.c.o
.PHONY : src/lj_str.o

# target to build an object file
src/lj_str.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_str.c.o
.PHONY : src/lj_str.c.o

src/lj_str.i: src/lj_str.c.i
.PHONY : src/lj_str.i

# target to preprocess a source file
src/lj_str.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_str.c.i
.PHONY : src/lj_str.c.i

src/lj_str.s: src/lj_str.c.s
.PHONY : src/lj_str.s

# target to generate assembly for a file
src/lj_str.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_str.c.s
.PHONY : src/lj_str.c.s

src/lj_strscan.o: src/lj_strscan.c.o
.PHONY : src/lj_strscan.o

# target to build an object file
src/lj_strscan.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_strscan.c.o
.PHONY : src/lj_strscan.c.o

src/lj_strscan.i: src/lj_strscan.c.i
.PHONY : src/lj_strscan.i

# target to preprocess a source file
src/lj_strscan.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_strscan.c.i
.PHONY : src/lj_strscan.c.i

src/lj_strscan.s: src/lj_strscan.c.s
.PHONY : src/lj_strscan.s

# target to generate assembly for a file
src/lj_strscan.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_strscan.c.s
.PHONY : src/lj_strscan.c.s

src/lj_tab.o: src/lj_tab.c.o
.PHONY : src/lj_tab.o

# target to build an object file
src/lj_tab.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_tab.c.o
.PHONY : src/lj_tab.c.o

src/lj_tab.i: src/lj_tab.c.i
.PHONY : src/lj_tab.i

# target to preprocess a source file
src/lj_tab.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_tab.c.i
.PHONY : src/lj_tab.c.i

src/lj_tab.s: src/lj_tab.c.s
.PHONY : src/lj_tab.s

# target to generate assembly for a file
src/lj_tab.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_tab.c.s
.PHONY : src/lj_tab.c.s

src/lj_trace.o: src/lj_trace.c.o
.PHONY : src/lj_trace.o

# target to build an object file
src/lj_trace.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_trace.c.o
.PHONY : src/lj_trace.c.o

src/lj_trace.i: src/lj_trace.c.i
.PHONY : src/lj_trace.i

# target to preprocess a source file
src/lj_trace.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_trace.c.i
.PHONY : src/lj_trace.c.i

src/lj_trace.s: src/lj_trace.c.s
.PHONY : src/lj_trace.s

# target to generate assembly for a file
src/lj_trace.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_trace.c.s
.PHONY : src/lj_trace.c.s

src/lj_udata.o: src/lj_udata.c.o
.PHONY : src/lj_udata.o

# target to build an object file
src/lj_udata.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_udata.c.o
.PHONY : src/lj_udata.c.o

src/lj_udata.i: src/lj_udata.c.i
.PHONY : src/lj_udata.i

# target to preprocess a source file
src/lj_udata.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_udata.c.i
.PHONY : src/lj_udata.c.i

src/lj_udata.s: src/lj_udata.c.s
.PHONY : src/lj_udata.s

# target to generate assembly for a file
src/lj_udata.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_udata.c.s
.PHONY : src/lj_udata.c.s

src/lj_vmevent.o: src/lj_vmevent.c.o
.PHONY : src/lj_vmevent.o

# target to build an object file
src/lj_vmevent.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_vmevent.c.o
.PHONY : src/lj_vmevent.c.o

src/lj_vmevent.i: src/lj_vmevent.c.i
.PHONY : src/lj_vmevent.i

# target to preprocess a source file
src/lj_vmevent.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_vmevent.c.i
.PHONY : src/lj_vmevent.c.i

src/lj_vmevent.s: src/lj_vmevent.c.s
.PHONY : src/lj_vmevent.s

# target to generate assembly for a file
src/lj_vmevent.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_vmevent.c.s
.PHONY : src/lj_vmevent.c.s

src/lj_vmmath.o: src/lj_vmmath.c.o
.PHONY : src/lj_vmmath.o

# target to build an object file
src/lj_vmmath.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_vmmath.c.o
.PHONY : src/lj_vmmath.c.o

src/lj_vmmath.i: src/lj_vmmath.c.i
.PHONY : src/lj_vmmath.i

# target to preprocess a source file
src/lj_vmmath.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_vmmath.c.i
.PHONY : src/lj_vmmath.c.i

src/lj_vmmath.s: src/lj_vmmath.c.s
.PHONY : src/lj_vmmath.s

# target to generate assembly for a file
src/lj_vmmath.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/liblua.dir/build.make CMakeFiles/liblua.dir/src/lj_vmmath.c.s
.PHONY : src/lj_vmmath.c.s

src/luajit.o: src/luajit.c.o
.PHONY : src/luajit.o

# target to build an object file
src/luajit.c.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/luajit.dir/build.make CMakeFiles/luajit.dir/src/luajit.c.o
.PHONY : src/luajit.c.o

src/luajit.i: src/luajit.c.i
.PHONY : src/luajit.i

# target to preprocess a source file
src/luajit.c.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/luajit.dir/build.make CMakeFiles/luajit.dir/src/luajit.c.i
.PHONY : src/luajit.c.i

src/luajit.s: src/luajit.c.s
.PHONY : src/luajit.s

# target to generate assembly for a file
src/luajit.c.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/luajit.dir/build.make CMakeFiles/luajit.dir/src/luajit.c.s
.PHONY : src/luajit.c.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... package"
	@echo "... package_source"
	@echo "... rebuild_cache"
	@echo "... buildvm"
	@echo "... liblua"
	@echo "... luajit"
	@echo "... minilua"
	@echo "... lj_vm.o"
	@echo "... src/host/buildvm.o"
	@echo "... src/host/buildvm.i"
	@echo "... src/host/buildvm.s"
	@echo "... src/host/buildvm_asm.o"
	@echo "... src/host/buildvm_asm.i"
	@echo "... src/host/buildvm_asm.s"
	@echo "... src/host/buildvm_fold.o"
	@echo "... src/host/buildvm_fold.i"
	@echo "... src/host/buildvm_fold.s"
	@echo "... src/host/buildvm_lib.o"
	@echo "... src/host/buildvm_lib.i"
	@echo "... src/host/buildvm_lib.s"
	@echo "... src/host/buildvm_peobj.o"
	@echo "... src/host/buildvm_peobj.i"
	@echo "... src/host/buildvm_peobj.s"
	@echo "... src/host/minilua.o"
	@echo "... src/host/minilua.i"
	@echo "... src/host/minilua.s"
	@echo "... src/lib_aux.o"
	@echo "... src/lib_aux.i"
	@echo "... src/lib_aux.s"
	@echo "... src/lib_base.o"
	@echo "... src/lib_base.i"
	@echo "... src/lib_base.s"
	@echo "... src/lib_bit.o"
	@echo "... src/lib_bit.i"
	@echo "... src/lib_bit.s"
	@echo "... src/lib_debug.o"
	@echo "... src/lib_debug.i"
	@echo "... src/lib_debug.s"
	@echo "... src/lib_ffi.o"
	@echo "... src/lib_ffi.i"
	@echo "... src/lib_ffi.s"
	@echo "... src/lib_init.o"
	@echo "... src/lib_init.i"
	@echo "... src/lib_init.s"
	@echo "... src/lib_io.o"
	@echo "... src/lib_io.i"
	@echo "... src/lib_io.s"
	@echo "... src/lib_jit.o"
	@echo "... src/lib_jit.i"
	@echo "... src/lib_jit.s"
	@echo "... src/lib_math.o"
	@echo "... src/lib_math.i"
	@echo "... src/lib_math.s"
	@echo "... src/lib_os.o"
	@echo "... src/lib_os.i"
	@echo "... src/lib_os.s"
	@echo "... src/lib_package_rel.o"
	@echo "... src/lib_package_rel.i"
	@echo "... src/lib_package_rel.s"
	@echo "... src/lib_string.o"
	@echo "... src/lib_string.i"
	@echo "... src/lib_string.s"
	@echo "... src/lib_table.o"
	@echo "... src/lib_table.i"
	@echo "... src/lib_table.s"
	@echo "... src/lj_alloc.o"
	@echo "... src/lj_alloc.i"
	@echo "... src/lj_alloc.s"
	@echo "... src/lj_api.o"
	@echo "... src/lj_api.i"
	@echo "... src/lj_api.s"
	@echo "... src/lj_asm.o"
	@echo "... src/lj_asm.i"
	@echo "... src/lj_asm.s"
	@echo "... src/lj_bc.o"
	@echo "... src/lj_bc.i"
	@echo "... src/lj_bc.s"
	@echo "... src/lj_bcread.o"
	@echo "... src/lj_bcread.i"
	@echo "... src/lj_bcread.s"
	@echo "... src/lj_bcwrite.o"
	@echo "... src/lj_bcwrite.i"
	@echo "... src/lj_bcwrite.s"
	@echo "... src/lj_carith.o"
	@echo "... src/lj_carith.i"
	@echo "... src/lj_carith.s"
	@echo "... src/lj_ccall.o"
	@echo "... src/lj_ccall.i"
	@echo "... src/lj_ccall.s"
	@echo "... src/lj_ccallback.o"
	@echo "... src/lj_ccallback.i"
	@echo "... src/lj_ccallback.s"
	@echo "... src/lj_cconv.o"
	@echo "... src/lj_cconv.i"
	@echo "... src/lj_cconv.s"
	@echo "... src/lj_cdata.o"
	@echo "... src/lj_cdata.i"
	@echo "... src/lj_cdata.s"
	@echo "... src/lj_char.o"
	@echo "... src/lj_char.i"
	@echo "... src/lj_char.s"
	@echo "... src/lj_clib.o"
	@echo "... src/lj_clib.i"
	@echo "... src/lj_clib.s"
	@echo "... src/lj_cparse.o"
	@echo "... src/lj_cparse.i"
	@echo "... src/lj_cparse.s"
	@echo "... src/lj_crecord.o"
	@echo "... src/lj_crecord.i"
	@echo "... src/lj_crecord.s"
	@echo "... src/lj_ctype.o"
	@echo "... src/lj_ctype.i"
	@echo "... src/lj_ctype.s"
	@echo "... src/lj_debug.o"
	@echo "... src/lj_debug.i"
	@echo "... src/lj_debug.s"
	@echo "... src/lj_dispatch.o"
	@echo "... src/lj_dispatch.i"
	@echo "... src/lj_dispatch.s"
	@echo "... src/lj_err.o"
	@echo "... src/lj_err.i"
	@echo "... src/lj_err.s"
	@echo "... src/lj_ffrecord.o"
	@echo "... src/lj_ffrecord.i"
	@echo "... src/lj_ffrecord.s"
	@echo "... src/lj_func.o"
	@echo "... src/lj_func.i"
	@echo "... src/lj_func.s"
	@echo "... src/lj_gc.o"
	@echo "... src/lj_gc.i"
	@echo "... src/lj_gc.s"
	@echo "... src/lj_gdbjit.o"
	@echo "... src/lj_gdbjit.i"
	@echo "... src/lj_gdbjit.s"
	@echo "... src/lj_ir.o"
	@echo "... src/lj_ir.i"
	@echo "... src/lj_ir.s"
	@echo "... src/lj_lex.o"
	@echo "... src/lj_lex.i"
	@echo "... src/lj_lex.s"
	@echo "... src/lj_lib.o"
	@echo "... src/lj_lib.i"
	@echo "... src/lj_lib.s"
	@echo "... src/lj_load.o"
	@echo "... src/lj_load.i"
	@echo "... src/lj_load.s"
	@echo "... src/lj_mcode.o"
	@echo "... src/lj_mcode.i"
	@echo "... src/lj_mcode.s"
	@echo "... src/lj_meta.o"
	@echo "... src/lj_meta.i"
	@echo "... src/lj_meta.s"
	@echo "... src/lj_obj.o"
	@echo "... src/lj_obj.i"
	@echo "... src/lj_obj.s"
	@echo "... src/lj_opt_dce.o"
	@echo "... src/lj_opt_dce.i"
	@echo "... src/lj_opt_dce.s"
	@echo "... src/lj_opt_fold.o"
	@echo "... src/lj_opt_fold.i"
	@echo "... src/lj_opt_fold.s"
	@echo "... src/lj_opt_loop.o"
	@echo "... src/lj_opt_loop.i"
	@echo "... src/lj_opt_loop.s"
	@echo "... src/lj_opt_mem.o"
	@echo "... src/lj_opt_mem.i"
	@echo "... src/lj_opt_mem.s"
	@echo "... src/lj_opt_narrow.o"
	@echo "... src/lj_opt_narrow.i"
	@echo "... src/lj_opt_narrow.s"
	@echo "... src/lj_opt_sink.o"
	@echo "... src/lj_opt_sink.i"
	@echo "... src/lj_opt_sink.s"
	@echo "... src/lj_opt_split.o"
	@echo "... src/lj_opt_split.i"
	@echo "... src/lj_opt_split.s"
	@echo "... src/lj_parse.o"
	@echo "... src/lj_parse.i"
	@echo "... src/lj_parse.s"
	@echo "... src/lj_record.o"
	@echo "... src/lj_record.i"
	@echo "... src/lj_record.s"
	@echo "... src/lj_snap.o"
	@echo "... src/lj_snap.i"
	@echo "... src/lj_snap.s"
	@echo "... src/lj_state.o"
	@echo "... src/lj_state.i"
	@echo "... src/lj_state.s"
	@echo "... src/lj_str.o"
	@echo "... src/lj_str.i"
	@echo "... src/lj_str.s"
	@echo "... src/lj_strscan.o"
	@echo "... src/lj_strscan.i"
	@echo "... src/lj_strscan.s"
	@echo "... src/lj_tab.o"
	@echo "... src/lj_tab.i"
	@echo "... src/lj_tab.s"
	@echo "... src/lj_trace.o"
	@echo "... src/lj_trace.i"
	@echo "... src/lj_trace.s"
	@echo "... src/lj_udata.o"
	@echo "... src/lj_udata.i"
	@echo "... src/lj_udata.s"
	@echo "... src/lj_vmevent.o"
	@echo "... src/lj_vmevent.i"
	@echo "... src/lj_vmevent.s"
	@echo "... src/lj_vmmath.o"
	@echo "... src/lj_vmmath.i"
	@echo "... src/lj_vmmath.s"
	@echo "... src/luajit.o"
	@echo "... src/luajit.i"
	@echo "... src/luajit.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

